from flask import Flask, request, jsonify
import requests
import json
from linebot import LineBotApi, WebhookHandler
from linebot.exceptions import InvalidSignatureError
from linebot.models import MessageEvent, TextMessage, TextSendMessage

# 設置你的 Channel Access Token 和 Channel Secret
line_bot_api = LineBotApi('Channel Access Token')
handler = WebhookHandler('Channel Secret')

app = Flask(__name__)

# 氣象局 API 的 URL
weather_api_url = "https://opendata.cwa.gov.tw/api/v1/rest/datastore/O-A0003-001?Authorization=CWA-7A752AE1-2953-4680-A2BA-6B1B13AAB708&format=JSON&StationId=466900"

def fetch_weather_data():
    try:
        # 發送 GET 請求
        response = requests.get(weather_api_url)
        
        # 檢查請求是否成功
        if response.status_code == 200:
            # 解析 JSON 回應
            data = response.json()

            # 提取並返回天氣資料
            if "records" in data and "location" in data["records"]:
                location = data["records"]["location"][0]  # 只取第一個城市的資料
                location_name = location["locationName"]
                weather_element = location["weatherElement"]
                
                temperature = next(item for item in weather_element if item["elementName"] == "TEMP")["elementValue"]
                humidity = next(item for item in weather_element if item["elementName"] == "HUMD")["elementValue"]
                weather = next(item for item in weather_element if item["elementName"] == "Weather")["elementValue"]
                
                return f"城市: {location_name}, 天氣: {weather}, 溫度: {temperature}°C, 濕度: {humidity}%"
            else:
                return "No weather data found."
        else:
            return f"Failed to fetch data. Status code: {response.status_code}"
    except Exception as e:
        return f"An error occurred: {e}"

@app.route("/callback", methods=['POST'])
def callback():
    # 獲取 Line 平台發送過來的簽名
    signature = request.headers['X-Line-Signature']

    # 獲取請求正文
    body = request.get_data(as_text=True)
    app.logger.info("Request body: " + body)

    try:
        handler.handle(body, signature)
    except InvalidSignatureError:
        return 'Invalid signature. Please check your channel access token/channel secret.', 400

    return 'OK'

@handler.add(MessageEvent, message=TextMessage)
def handle_message(event):
    if event.message.text == "天氣":
        weather_info = fetch_weather_data()
        line_bot_api.reply_message(
            event.reply_token,
            TextSendMessage(text=weather_info)
        )
    else:
        line_bot_api.reply_message(
            event.reply_token,
            TextSendMessage(text="請輸入 '天氣' 獲取最新天氣資訊。")
        )

if __name__ == "__main__":
    app.run(port=8000)
